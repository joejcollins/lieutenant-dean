[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "captain_black"
version = "1.0.0"
description = "Captain Black Python test bed"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "ansible",
    "ansible-runner",
    "celery",
    "click",
    "fastapi",
    "flake8",
    "flasgger",
    "Flask",
    "flower",
    "gunicorn",                # used by the Flask API.
    "hypercorn",               # used by the FastApi API.
    "ncclient",
    "python-dotenv",           # used for the .env secrets file.
    "redis",
    "requests",
    "UnleashClient",           # used by the for feature flags.
]

[project.optional-dependencies]
dev = [
    "ansible-lint", 
    "black",
    "debugpy",                 # only required for debugging, not needed for production.
    "mkdocs",
    "mkdocs-mermaid2-plugin",
    "mkdocs-roamlinks-plugin",
    "mypy",
    "pip-tools",               # used to manage requirements.txt.
    "pytest",                  # used for testing, not needed for production.
    "pytest-flask",            # used for testing, not needed for production.
    "ruff",                    # replacement for flake8.
]

# Find all the packages in the root project using automatic discovery (flat-layout).
[tool.setuptools.packages]
find = { namespaces = false } # Disable implicit namespaces
# I think this uses the __init__.py files to find the packages. 

[project.scripts]
run = "click_cli.main:cli"

[tool.isort]
profile = "black"

[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = true
pythonVersion = "3.11"
pythonPlatform = "Linux"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
follow_imports = "skip"
"no_strict_optional" = true
"exclude" = ["typings"]

[tool.pytest.ini_options]
log_cli = false
minversion = "6.0"
addopts = "-q --disable-warnings --cache-clear"
testpaths = ["./tests"]

[tool.ruff]
lint.select = ["F", "E", "W", "C90", "I", "PL", "D"]
lint.ignore = ["D203", "D213"]
lint.fixable = ["ALL"]
target-version = "py311"
exclude = [
    ".git",
    ".github",
    ".pytest_cache",
    ".venv",
    ".vscode",
    "__pycache__"
]
